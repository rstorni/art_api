"""Add CASCADE delete to artwork_id in Lot

Revision ID: 36026dd76dcd
Revises: 0b710037f6c9
Create Date: 2025-01-10 15:00:18.202312

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '36026dd76dcd'
down_revision: Union[str, None] = '0b710037f6c9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('auctions')
    op.drop_table('lots')
    op.drop_table('bids')
    op.drop_table('artworks')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artworks',
    sa.Column('artwork_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('artist', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('medium', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('details', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('fabricated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('artwork_id', name='artworks_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('bids',
    sa.Column('bid_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('lot_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['lot_id'], ['lots.lot_id'], name='bids_lot_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='bids_user_id_fkey'),
    sa.PrimaryKeyConstraint('bid_id', name='bids_pkey')
    )
    op.create_table('lots',
    sa.Column('lot_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('auction_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('artwork_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('low_estimate_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('high_estimate_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['artwork_id'], ['artworks.artwork_id'], name='lots_artwork_id_fkey'),
    sa.ForeignKeyConstraint(['auction_id'], ['auctions.auction_id'], name='lots_auction_id_fkey'),
    sa.PrimaryKeyConstraint('lot_id', name='lots_pkey'),
    sa.UniqueConstraint('artwork_id', name='lots_artwork_id_key')
    )
    op.create_table('auctions',
    sa.Column('auction_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('details', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('auction_id', name='auctions_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    # ### end Alembic commands ###
